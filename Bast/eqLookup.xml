<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- $Id$ -->
<muclient>
<plugin
   name="eqLookup"
   author="Bast"
   id="aaa66caed92ffc6146964abc"
   language="Lua"
   purpose="lookup eq from the database"
   save_state="y"
   date_written="2009-02-22 14:20:07"
   requires="4.73"
   version="6.1"
   >

<description trim="y">
<![CDATA[
[FOR PLUGIN AUTHORS ONLY]

]]>
</description>
</plugin>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<triggers>
</triggers>

<script>
<![CDATA[
internalrevision = "$Rev$"

dofile (GetPluginInfo (GetPluginID (), 20) .. "luapath.lua")

require "var"
require "serialize"
require "commas"
require "pluginhelper"
require "verify"
require "aardutils"
require "chardb"
require 'colours'
require "eqdb"
require "formatitem"

eqdb = EQdb:new{}

function cmd_close(cmddict)
  db:close('cmd_close', true)
end

function print_item(item)
  Hyperlink(phelper.cmd .. " getitem " .. tostring(item.serial), string.format('%-15s', tostring(item.serial)), "Lookup details", 0xE16941, GetInfo(271), false)
  ColourTell(RGBColourToName(var.plugin_colour), "black", string.format(" %-15s %-5s %-5s ",
                         tostring(item.containerid), tostring(item.level), tostring(item.score or '')))
  TextToColourTell(item.cname)
  ColourNote("", "", "")
end

function print_itemheader()
  ColourNote(RGBColourToName(var.plugin_colour), "black", string.format("%-15s %-15s %-5s %-5s %s",
                         'Serial', 'Container', 'Level', 'Score', 'Name'))
  ColourNote(RGBColourToName(var.plugin_colour), "black", '---------------------------------------------------------------')
end

function cmd_eqlookup(cmddict)
  --print('eqlookup')
  --tprint(cmddict)
  if cmddict[1] then
    local sqllu = strjoin(' ', cmddict)
    --local sqlcmd = 'SELECT * FROM items WHERE ' .. cmddict.args .. ' LEFT JOIN on items.serial = itemdetails.serial'
    --local sqlcmd = 'SELECT * FROM items LEFT JOIN itemdetails on items.serial = itemdetails.serial WHERE ' .. cmddict.args
    --local sqlcmd = 'SELECT items.serial, containerid, shortflags, items.name, items.cname, score, flags FROM items LEFT JOIN itemdetails on items.serial = itemdetails.serial WHERE ' .. cmddict.args'
    local sqlcmd = 'SELECT * FROM items WHERE ' .. cmddict.args
    print(sqlcmd)
    if eqdb:open('cmd_eqlookup') then
      local stmt = eqdb.db:prepare(sqlcmd)
      if not stmt then
        phelper:plugin_header('EQ Lookup')
        print('The lookup arguments do not create a valid sql statement')
        eqdb:close()
        return
      end
      print_itemheader()
      for a in stmt:nrows() do
        local titem = eqdb:getitemdetails(a.serial)
        if titem then
          a.score = titem.score
        end
        print_item(a)
      end
      eqdb:close()
    end
    ColourNote("", "", "")
  end
end

function cmd_eqprintitem(cmddict)
  --print('showitem')
  --tprint(cmddict)
  if cmddict[1] then
    for i,v in ipairs(cmddict) do
      local titem = eqdb:getitemdetails(v)
      if titem then
        local fitem = formatitem(titem)
        for i,v in ipairs(fitem) do
          TextToColourTell(v)
          ColourNote("", "", "")
        end
        ColourNote("", "", "")
      else
        ColourNote(RGBColourToName(var.plugin_colour), "black", "There is no info for that id in the database")
      end
    end
  end
end

function cmd_eqcomp(cmddict)
  if cmddict[1] then
    local tstyle = string.format('%-15s', 'Name') .. string.format(' %-5s ', 'Score') .. formatstatsheader()
    TextToColourTell(tstyle)
    ColourNote("", "", "")
    ColourNote("", "", string.rep('-', 89))
    for i,v in ipairs(cmddict) do
      local titem = eqdb:getitemdetails(v)
      local tstyle = string.format('%-15s', string.sub(titem.name, 1, 15)) .. string.format(' @C%-5s@w ', titem.score)
      tstyle = tstyle .. formatstats(titem.statmod)
      TextToColourTell(tstyle)
      ColourNote("", "", "")
    end
  end
  ColourNote("", "", "")
end

function cmd_translate(cmddict)
  --print('eqlookup')
  --tprint(cmddict)
  if cmddict[1] then
    local ttype = cmddict[1]:lower()
    if ttype == 'wear' or ttype == 'wearlocs' then
      ColourNote(RGBColourToName(var.plugin_colour), "black", string.format("%-4s %-s", 'Num', 'String'))
      for i,v in ipairs(wearlocs) do
        ColourNote(RGBColourToName(var.plugin_colour), "black", string.format("%-4s %-s", i-1, v))
      end
    elseif ttype == 'objecttypes' or ttype == 'object' then
      ColourNote(RGBColourToName(var.plugin_colour), "black", string.format("%-4s %-s", 'Num', 'String'))
      for i,v in ipairs(objecttypes) do
        ColourNote(RGBColourToName(var.plugin_colour), "black", string.format("%-4s %-s", i, v))
      end
    end
  else
    phelper:plugin_header('EQ Lookup')
    ColourNote(RGBColourToName(var.plugin_colour), "black", "The following flags can be translated")
    ColourNote(RGBColourToName(var.plugin_colour), "black", 'wearlocs (wear) and objecttypes (object)')
  end
end

]]>
</script>

<script>
<![CDATA[

function OnPluginBroadcast (msg, id, name, text)
  phelper:OnPluginBroadcast(msg, id, name, text)

end

function OnPluginInstall ()
  --OnPluginEnable is automatically called by pluginhelper

  phelper:OnPluginInstall()
end -- OnPluginInstall

function OnPluginClose ()

  phelper:OnPluginClose()
end -- OnPluginClose

function OnPluginEnable ()

  phelper:OnPluginEnable()
end -- OnPluginEnable

function OnPluginDisable ()

  phelper:OnPluginDisable()
end -- OnPluginDisable

function OnPluginConnect ()

  phelper:OnPluginConnect()
end -- function OnPluginConnect

function OnPluginDisconnect ()

  phelper:OnPluginDisconnect()
end -- function OnPluginConnect

function OnPluginSaveState ()

  phelper:OnPluginSaveState()
end -- function OnPluginSaveState

]]>
</script>

<script>
<![CDATA[


phelper:set_default('plugin_colour', 'orange')
phelper:set_default('cmd', 'eqlu')

phelper:add_cmd('lu', {func=cmd_eqlookup, help="lookup stuff in the db", default=true})
phelper:add_cmd('getitem', {func=cmd_eqprintitem, help="print info on item with id"})
phelper:add_cmd('comp', {func=cmd_eqcomp, help="compare items,args = list of serials"})
phelper:add_cmd('translate', {func=cmd_translate, help="show what strings mean for certain types of flags"})
phelper:add_cmd('close', {func=cmd_close, help="close the db"})

phelper:enable()
]]>
</script>
</muclient>
