<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, August 06, 2008, 1:13 PM -->
<!-- MuClient version 4.35 -->

<!-- Plugin "Consider_info" generated by Plugin Wizard -->

<muclient>
<plugin
   name="scan_highlight"
   author="Bast"
   id="aaacbb1cd7dacff665e2a23d"
   language="Lua"
   purpose="highlight gq/cp/quest mobs in scan"
   date_written="2008-10-15 07:35"
   requires="4.30"
   version="2.01"
   >
<description trim="y">
<![CDATA[
]]>
</description>

</plugin>


<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   match="{scan}"
   script="togglescan"
   omit_from_output="y"
   name="scanon"
   sequence="100"
   group="scantag"
  />
  <trigger
   enabled="y"
   match="{/scan}"
   script="togglescan"
   omit_from_output="y"
   name="scanoff"
   sequence="100"
   group="scantag"
  />
  <trigger
   enabled="n"
   script="checkmob"
   match="^     \- (\(.*\))* *(.+)$"
   name="checkmob"
   omit_from_output="y"
   regexp="y"
   sequence="100"
   group="scan"
   />
</triggers>

<!--  Script  -->


<script>
<![CDATA[
internalrevision = "$Rev$"

dofile (GetPluginInfo (GetPluginID (), 20) .. "luapath.lua")

require "var"
require "pluginhelper"
require 'ldplugin'
require 'colours'

onquest = false
ongq = false
oncp = false

colours = {
  cpcolour = 'black',
  questcolour = 'black',
  gqcolour = 'black'
}

backcolours = {
  cpcolour = 'cyan',
  questcolour = 'red',
  gqcolour = 'magenta'
}


cpmobs = {}
gqmobs = {}
questmob = {}

function togglescan(name, line, wildcards)
  if name == 'scanon' then
    if onquest or ongq or oncp then
      --print('turning on scan matching')
      phelper:enabletriggroup('scan', true)
    end
  elseif name == 'scanoff' then
    --print('turning off scan matching')
    phelper:enabletriggroup('scan', false)
  end
end

function checkmob(name, line, wildcards, styles)
  local found = false
  local mob = wildcards[2]
  --mob = mob:lower()
  mob = trim(mob)

  if not found and onquest then
     if mob == questmob.mobname then
       found = 'quest'
     end
  end

  if not found and ongq then
    for i,v in ipairs(gqmobs) do
      if mob:lower() == v.name:lower() then
        found = 'gq'
      end
    end
  end

  if not found and oncp then
    for i,v in ipairs(cpmobs) do
      if mob:lower() == v.name:lower() then
        found = 'cp'
      end
    end
  end

  if found then
      for i,v in ipairs(styles) do
        ColourTell(colours[tostring(found) .. 'colour'], backcolours[tostring(found) .. 'colour'], v.text)
      end
      ColourTell(colours[tostring(found) .. 'colour'], backcolours[tostring(found) .. 'colour'], ' - (' .. tostring(found):upper() .. ')')
  else
    for i,v in ipairs(styles) do
      ColourTell(RGBColourToName(v.textcolour), v.backcolour, v.text)
    end
  end
  ColourNote("", "", "")
end

]]>
</script>

<script>
<![CDATA[

function OnPluginBroadcast (msg, id, name, text)
  if id == "aaa8a9eda20fa11787c6b438" then
    -- quest stuff
    if msg == 2 then
      -- quest mob info
      onquest = true
      local pvar = GetPluginVariable(  "aaa8a9eda20fa11787c6b438", "quest_info" )

      -- get the timer
      loadstring( pvar )()
      questmob = quest_info
    elseif msg == 4 or msg == 6 or msg == 8 then
      onquest = false
    end
  elseif id == "aaa66f81c50828bbbfda7100" then
    -- cp stuff
    if msg == 3 or msg == 4 then
      oncp = false
    elseif msg == 1 then
      oncp = true
      local pvar = GetPluginVariable(  "aaa66f81c50828bbbfda7100", "mobs" )

      -- get the mobs
      loadstring( pvar )()
      cpmobs = mobs

    end

  elseif id == "aaa77f81c5408278ccda7100" then
    -- gq stuff
    if msg == 4 or msg == 5 then
      ongq = false
    elseif msg == 3 then
      ongq = true
      local pvar = GetPluginVariable(  "aaa77f81c5408278ccda7100", "mobs" )
      -- get the mobs
      loadstring( pvar )()
      gqmobs = mobs

    end
  end
  phelper:OnPluginBroadcast(msg, id, name, text)
end

function OnPluginInstall ()
  --OnPluginEnable is automatically called by pluginhelper

  phelper:OnPluginInstall()
end -- OnPluginInstall

function OnPluginClose ()

  phelper:OnPluginClose()
end -- OnPluginClose

function OnPluginEnable ()
  ldplugin ("broadcast_quest")
  ldplugin ("broadcast_cp")
  ldplugin ("broadcast_gq")

  phelper:OnPluginEnable()
end -- OnPluginEnable

function OnPluginDisable ()

  phelper:OnPluginDisable()
end -- OnPluginDisable

function OnPluginConnect ()
  SendNoEcho('tags scan on')

  phelper:OnPluginConnect()
end -- function OnPluginConnect

function OnPluginDisconnect ()
  SendNoEcho('tags scan off')

  phelper:OnPluginDisconnect()
end -- function OnPluginConnect

function OnPluginSaveState ()

  phelper:OnPluginSaveState()
end -- function OnPluginSaveState


]]>
</script>

<script>
<![CDATA[

phelper:set_default('cmd', 'sch')
phelper:set_default('plugin_colour', 'orange')

phelper:enable()

]]>
</script>
</muclient>