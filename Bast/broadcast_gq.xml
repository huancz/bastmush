<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- $Id$ -->
<muclient>
<plugin
   name="xBroadcast_GQ"
   author="Bast"
   id="aaa77f81c5408278ccda7100"
   language="Lua"
   purpose="Broadcasts when anything happens related to a gq"
   save_state="y"
   date_written="2009-02-21 1:10:01"
   requires="4.38"
   version="6.0"
   >

<description trim="y">
<![CDATA[
[FOR PLUGIN AUTHORS ONLY]

Broadcasts when anything happens in a gquest
Broadcasts
   1 - gquest available
   2 - gquest joined
   3 - Mob list, get var.mobs and loadstring it
       mobs = { 1 = {name = 'Some name', room = 'Some room', clean = 'A name with some stuff removed', num=number},
              2 = {name = 'Another name', room = 'Another room', clean = 'Another name with some stuff removed', num=number}, }
       It will be resent when a mob is killed and will be nil when a gquest is not active
   4 - rewards get var.gq_info and loadstring it
       see below
   5 - gquest over

Example
  function OnPluginBroadcast (msg, id, name, text)
    if id == "aaa77f81c5408278ccda7100" and msg == 3 then
      local pvar = GetPluginVariable(  "aaa77f81c5408278ccda7100", "mobs" )

      -- get the mobs
      loadstring( pvar )()
      gq_mobs = mobs
    end
  end

gq_info = {}
  gq_info.starttime = 1241394128
  gq_info.mobs = {}
    gq_info.mobs[1] = {}
      gq_info.mobs[1].num = "1"
      gq_info.mobs[1].room = "Castle Vlad-Shamir"
      gq_info.mobs[1].name = "demon cook"
      gq_info.mobs[1].clean = "demon cook"
    gq_info.mobs[2] = {}
      gq_info.mobs[2].num = "1"
      gq_info.mobs[2].room = "Castle Vlad-Shamir"
      gq_info.mobs[2].name = "an insane demon"
      gq_info.mobs[2].clean = "an insane demon"
    gq_info.mobs[3] = {}
      gq_info.mobs[3].num = "1"
      gq_info.mobs[3].room = "Diamond Soul Revelation"
      gq_info.mobs[3].name = "Marie Antoinette"
      gq_info.mobs[3].clean = "marie antoinette"
    gq_info.mobs[4] = {}
      gq_info.mobs[4].num = "1"
      gq_info.mobs[4].room = "Realm of Deneria"
      gq_info.mobs[4].name = "Zombie"
      gq_info.mobs[4].clean = "zombie"
    gq_info.mobs[5] = {}
      gq_info.mobs[5].num = "1"
      gq_info.mobs[5].room = "ST:TNG"
      gq_info.mobs[5].name = "a loose crystal of the entity"
      gq_info.mobs[5].clean = "a loose crystal of the entity"
    gq_info.mobs[6] = {}
      gq_info.mobs[6].num = "1"
      gq_info.mobs[6].room = "Star Wars"
      gq_info.mobs[6].name = "a transporter crewman"
      gq_info.mobs[6].clean = "a transporter crewman"
    gq_info.mobs[7] = {}
      gq_info.mobs[7].num = "1"
      gq_info.mobs[7].room = "The Flying Citadel"
      gq_info.mobs[7].name = "Blandine, archangel of dreams"
      gq_info.mobs[7].clean = "blandine archangel of dreams"
    gq_info.mobs[8] = {}
      gq_info.mobs[8].num = "1"
      gq_info.mobs[8].room = "The Goblin Fortress"
      gq_info.mobs[8].name = "Orchid the pilferer"
      gq_info.mobs[8].clean = "orchid the pilferer"
    gq_info.mobs[9] = {}
      gq_info.mobs[9].num = "1"
      gq_info.mobs[9].room = "The Imperial City of Reme"
      gq_info.mobs[9].name = "a leper"
      gq_info.mobs[9].clean = "a leper"
  gq_info.qpmobs = 0
  gq_info.won = 0
  gq_info.length = 0
  gq_info.finishtime = 1241394624
  gq_info.pracs = 0
  gq_info.gold = 0
  gq_info.tp = 0
  gq_info.level = "69"
  gq_info.trains = 0
  gq_info.qp = 0
]]>
</description>

<!--
Global Quest: Global quest # 459558 has been declared for levels 141 to 155.

You have now joined the quest. See 'help gquest' for available commands.

Global Quest: The global quest for levels 117 to 130 has now started.
Global Quest: Use 'gquest info' to see the targets.

You still have to kill 2 * some singing mice (Faerie Tales II)
You still have to kill 1 * Akiya (Masquerade Island)
You still have to kill 1 * the train conductor (ST:TNG)
You still have to kill 1 * a slime (Sanctity of Eternal Damnation)
You still have to kill 2 * a blue and green cockatoo (The Amazon Nation)
You still have to kill 2 * a chaosian citizen (The Courts of Chaos)
You still have to kill 1 * a brawling pirate (The Misty Shores of Yarr)
You still have to kill 2 * a deckscrubber (The Misty Shores of Yarr)
You still have to kill 1 * a pirate sorting the treasure (The Misty Shores of Yarr)
You still have to kill 1 * A cleaning maid (Verdure Estate)


Congratulations, that was one of the GLOBAL QUEST mobs!
3 quest points awarded.

CONGRATULATIONS! You were the first to complete this quest!
Reward of 4 practice sessions added.
Reward of 12100 gold coins added.
Reward of 13 quest points added.
Reward of 1 trivia point added.
You may win 2 more gquests at this level.
Global Quest: The global quest has been won by Bast - 13th win.

You are not on a global quest.
-->
</plugin>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<triggers>

  <trigger
   enabled="y"
   match="^Global Quest: Global quest \# (.*) has been declared for levels (.*) to (.*)\.$"
   name="gq_declared"
   script="gq_declared"
   sequence="100"
   regexp="y"
   omit_from_output="n"
  >
  </trigger>

 <trigger
   enabled="n"
   match="^You have now joined the quest. See 'help gquest' for available commands.$"
   name="gq_join"
   script="gq_join"
   sequence="100"
   regexp="y"
   omit_from_output="n"
  >
  </trigger>

 <trigger
   enabled="n"
   match="^Global Quest: The global quest for levels (.*) to (.*) has now started\.$"
   name="gq_start"
   script="gq_start"
   sequence="100"
   regexp="y"
   omit_from_output="n"
  >
  </trigger>

  <trigger
   enabled="n"
   match="You are not on a global quest."
   name="gq_none"
   script="gq_none"
   sequence="100"
   group="gqcheck"
  >
  </trigger>

  <trigger
   enabled="n"
   match="^You still have to kill (?&lt;num&gt;\d*) \* (?&lt;name&gt;.*) \((?&lt;room&gt;.*)\)\.*$"
   name="gq_item"
   script="gq_item"
   sequence="100"
   regexp="y"
   group="gqcheck"
   omit_from_output="y"
  >
  </trigger>

  <trigger
   enabled="n"
   match="*"
   name="finishgqcheck"
   script="gq_item"
   group="gqcheckfin"
   sequence="101"
  >
  </trigger>

  <trigger
   enabled="n"
   match="^(\s*)Reward of (?&lt;amount&gt;\d+) (?&lt;type&gt;.+) (.+) added.$"
   sequence="100"
   script="gq_reward"
   group="gqrew"
   regexp="y"
  >
  </trigger>

 <trigger
   enabled="n"
   match="Congratulations, that was one of the GLOBAL QUEST mobs!"
   send_to="10"
   sequence="100"
   script="gq_mob_dead"
   group="gqin"
  >
  </trigger>

 <trigger
   enabled="n"
   match="CONGRATULATIONS! You were the first to complete this quest!"
   sequence="100"
   script="gq_complete"
   group="gqin"
  >
  </trigger>

 <trigger
   enabled="n"
   match="Global Quest: The global quest has been won by (.*) - (.*) win."
   sequence="100"
   script="gq_none"
   group="gqdone"
   regexp="y"
  >
  </trigger>
 <trigger
   enabled="n"
   match="You are no longer part of the current quest."
   sequence="100"
   script="gq_quit"
   group="gqdone"
   regexp="y"
  >
  </trigger>

</triggers>


<!--  Aliases  -->

<aliases>
  <alias
   name="gq_check"
   script="gq_check"
   match="^(gq|gquest) check$"
   enabled="y"
   regexp="y"
   sequence="100"
  >
  <send>gq check</send>
  </alias>

</aliases>


<!--  Script  -->

<script>
<![CDATA[
internalrevision = "$Rev$"

dofile (GetPluginInfo (GetPluginID (), 20) .. "luapath.lua")

require "var"
require "serialize"
require "commas"
require "check"
require "pluginhelper"
require "verify"
require "copytable"
require "ldplugin"

rewardtable = {
  quest = 'qp',
  training = 'trains',
  gold = 'gold',
  trivia = 'tp',
  practice = 'pracs',
  }

mobsleft = {}
gq_info = {}
enemy = ""
joined = false
started = false

function cleanname(name)
  return string.lower(string.gsub(name, ",", ""))
end

function gq_declared (name, line, wildcards)
  check( EnableTrigger ("gq_join", true) )
  check( EnableTrigger ("gq_start", true) )
  phelper:enabletriggroup("gqdone", true)
  phelper:broadcast(1)
end

function gq_join (name, line, wildcards)
  joined = true
  check( EnableTrigger ("gq_join", false) )
  mobsleft = {}
  gq_new()
  phelper:broadcast(2)
  if started then
    gq_start()
  end
end

function gq_start (name, line, wildcards)
  check( EnableTrigger ("gq_start", false) )
  started = true
  if joined then
    phelper:enabletriggroup("gqin", true)

    Execute("gq check")
  end
end

function gq_item (name, line, wildcards)
  if name == "finishgqcheck" and trim(line) == "" then
    if not next(gq_info['mobs']) then
      gq_info['mobs'] = copytable.deep(mobsleft)
      SaveState()
    end
    phelper:enabletriggroup("gqcheck", false)
    check( EnableTrigger ("finishgqcheck", false) )
    var.mobs = serialize.save( "mobs", mobsleft )
    phelper:broadcast(3, var.mobs)
    return
  elseif name == "finishgqcheck"  then
    return
  end

  check( EnableTrigger ("finishgqcheck", true) )
  name = wildcards.name
  room = wildcards.room
  num = wildcards.num
  if not name or not room then
    print("error parsing line: ", line)
    tprint(wildcards)
  else
    table.insert(mobsleft, {name=name, room=room, clean=cleanname(name), num=num})
  end
end -- campaign_item

function gq_mob_dead (name, line, wildcards)
  local tenemy = enemy
  local found = false
  gq_info.qpmobs = gq_info.qpmobs + 3
  for i,v in ipairs(mobsleft) do
    if v.clean == string.lower(tenemy) then
      found = true
      if tonumber(v.num) == 1 then
        table.remove(mobsleft, i)
      else
        v.num = tonumber(v.num) - 1
      end
      break
    end
  end
  if found then
    var.mobs = serialize.save( "mobs", mobsleft )
    phelper:broadcast(3, var.mobs)
  else
    print("GQ: could not find mob", enemy)
    Execute("gq check")
  end
end

function gq_reward (name, line, wildcards)
  local type = wildcards.type
  local amount = wildcards.amount
  gq_info[rewardtable[type]] = amount
  gq_info['won'] = 1
end

function gq_complete(name, line, wildcards)
  gq_info['won'] = 1
  phelper:enabletriggroup("gqrew", true)
end

function gq_check( name, line, wildcards)
  mobsleft = {}
  phelper:enabletriggroup("gqcheck", true)
end -- cp_check

function gq_none( name, line, wildcards)
  gq_info['finishtime'] = GetInfo(304)
  var.gq_info = serialize.save( "gq_info", gq_info )
  SaveState()
  if joined then
    phelper:broadcast(4, var.gq_info)
  end
  phelper:broadcast(5)
  check( EnableTrigger ("gq_join", false) )
  check( EnableTrigger ("gq_start", false) )
  phelper:enabletriggroup("gqcheck", false)
  phelper:enabletriggroup("gqin", false)
  phelper:enabletriggroup("gqrew", false)
  phelper:enabletriggroup("gqdone", false)
  joined = false
  started = false
end

function gq_quit()
  joined = false
  started = false
  phelper:broadcast(6)
end

function gq_new()
  gq_info = {}
  gq_info['mobs'] = {}
  gq_info['trains'] = 0
  gq_info['pracs'] = 0
  gq_info['gold'] = 0
  gq_info['tp'] = 0
  gq_info['qp'] = 0
  gq_info['qpmobs'] = 0
  gq_info['level'] =  curlevel
  gq_info['starttime'] = GetInfo(304)
  gq_info['finishtime'] = 0
  gq_info['length'] = 0
  gq_info['won'] = 0
  SaveState()
end

]]>
</script>

<script>
<![CDATA[

function OnPluginBroadcast (msg, id, name, text)

  if id == '3e7dedbe37e44942dd46d264' then
    if text:find("char") then
      res, gmcparg = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval", "char")
      tt = assert (loadstring ('return ' .. gmcparg or ""))()

      if tt['status'] then
        curlevel = tt.status.level
        enemy = tt.status.enemy
      end

    end
  end

  phelper:OnPluginBroadcast(msg, id, name, text)
end

function OnPluginInstall ()

  phelper:OnPluginInstall()
end -- OnPluginInstall

function OnPluginClose ()

  phelper:OnPluginClose()
end -- OnPluginClose

function OnPluginEnable ()
  ldplugin ("aard_GMCP_handler", "3e7dedbe37e44942dd46d264")

  phelper:OnPluginEnable()
end -- OnPluginEnable

function OnPluginDisable ()

  phelper:OnPluginDisable()
end -- OnPluginDisable

function OnPluginConnect ()

  phelper:OnPluginConnect()
end -- function OnPluginConnect

function OnPluginDisconnect ()

  phelper:OnPluginDisconnect()
end -- function OnPluginConnect

function OnPluginSaveState ()

  phelper:OnPluginSaveState()
end -- function OnPluginSaveState

]]>
</script>

<script>
<![CDATA[

phelper:set_default('cmd', 'bgq')
phelper:set_default('plugin_colour', 'orange')

phelper:enable()

]]>
</script>
</muclient>

