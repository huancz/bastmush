<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- $Id$ -->
<muclient>
<plugin
   name="miniwin_quest"
   author="Bast"
   id="eee9aafda20ae11787c6b438"
   language="Lua"
   purpose="Shows quests in a miniwindow"
   date_written="2008-07-24"
   requires="4.34"
   version="1.0"
   save_state="y"
   >
<description trim="y">
<![CDATA[
Shows quests in a miniwindow
]]>
</description>

</plugin>

<!--  Script  -->


<script>
<![CDATA[

require "commas"
require 'var'
require "commas"
require 'miniwin'
require 'tprint'
require 'pluginhelper'
require 'ldplugin'

quest_text = {}
quest_stuff = {mob=nil, room=nil, area=nil}
quest_timer = {}

questwin = Miniwin:new{name="Quest"}
questwin:set('font', 'Comic Sans MS', {default = true})
questwin:set('bg_colour', 0xE7FFFF, {default = true})
questwin:set('text_colour', 0x000000, {default = true})
questwin:set('windowpos', 7, {default = true})
questwin:set('header_height', 0, {default = true})
questwin:set('width_padding', 5, {default = true})
questwin:set('height_padding', 3, {default = true})
questwin:add_setting("time_colour", {help="the colour for the time", type="colour", default=verify_colour(0x82004B), sortlev=1})
questwin:add_setting("avail_bg_colour", {help="the background colour for when a quest available", type="colour", default=verify_colour("red"), sortlev=1})
questwin:add_setting("avail_colour", {help="the text colour for when a quest is available", type="colour", default=verify_colour("black"), sortlev=1})


function build_quest()
  if (not next(quest_timer)) or (not next(quest_stuff)) then
    return
  end

  quest_text = {}
  local mobstring = string.format("%-7s: %s", "Mob", quest_stuff.mobname)
  table.insert(quest_text, mobstring)
  local roomstring = string.format("%-7s: %s", "Room", quest_stuff.mobroom)
  table.insert(quest_text, roomstring)
  local areastring = string.format("%-7s: %s", "Area", quest_stuff.mobarea)
  table.insert(quest_text, areastring)

  local style = {}
  style.text = string.format ("Time to go: %s", quest_timer.text)
  style.len = #style.text
  style.textcolour = 'time_colour'
  style.style = 0
  table.insert (quest_text, {style})

  show_quest ()
end

function show_quest ()
  -- do nothing if no quest
  if #quest_text == 0 then
    return
  end -- if

  questwin:enable()
  questwin:createwin(quest_text)
end -- show_quest_text

]]>
</script>

<script>
<![CDATA[

function OnPluginBroadcast (msg, id, name, text)
  if id == "aaa8a9eda20fa11787c6b438" then
    if msg == 1 then
      -- quest available
      quest_stuff = {}
      quest_timer = {}
      quest_text = {}
      local style = {}
      style.style = 0
      style.text = "You can quest again!"
      style.backcolour = 'avail_bg_colour'
      style.len = #style.text
      style.textcolour = 'avail_colour'
      table.insert(quest_text, {style})
      show_quest()
    elseif msg == 2 then
      -- quest mob info
      quest_timer = {}
      local pvar = GetPluginVariable(  "aaa8a9eda20fa11787c6b438", "quest_info" )

      -- get the timer
      loadstring( pvar )()
      quest_stuff = quest_info
    elseif msg == 3 then
      -- quest time left
      local pvar = GetPluginVariable(  "aaa8a9eda20fa11787c6b438", "timer" )

      -- get the timer
      loadstring( pvar )()
      quest_timer = timer
      build_quest()
    elseif msg == 4 then
      -- quest mob dead
      quest_text = {"Quest Complete - Hand it in"}
      show_quest()
    elseif msg == 5 then
      return
    elseif msg == 6 then
      return
    elseif msg == 7 then
      -- time until next quest
      local pvar = GetPluginVariable(  "aaa8a9eda20fa11787c6b438", "timer" )

      -- get the timer
      loadstring( pvar )()
      quest_text = {}
      local style = {}
      style.style = 0
      style.text=  string.format ("Next quest: %s", timer.text)
      style.len = #style.text
      style.textcolour = 'time_colour'
      table.insert(quest_text, {style})
      show_quest()
    end

  end -- stats changed

  PluginhelperOnPluginBroadcast(msg, id, name, text)
end

function OnPluginInstall ()
  --OnPluginEnable is automatically called by pluginhelper

  PluginhelperOnPluginInstall()
end -- OnPluginInstall

function OnPluginClose ()

  PluginhelperOnPluginClose()
end -- OnPluginClose

function OnPluginEnable ()
  ldplugin("broadcast_quest")

  PluginhelperOnPluginEnable()
end -- OnPluginEnable

function OnPluginDisable ()

  PluginhelperOnPluginDisable()
end -- OnPluginDisable

function OnPluginConnect ()

  PluginhelperOnPluginConnect()
end -- function OnPluginConnect

function OnPluginDisconnect ()

  PluginhelperOnPluginDisconnect()
end -- function OnPluginConnect

function OnPluginSaveState ()

  PluginhelperOnPluginSaveState()
end -- function OnPluginSaveState

]]>
</script>

<aliases>
  <alias
   name="plugin_parse"
   script="plugin_parse_helper"
   match="nothing"
   enabled="y"
   regexp="y"
   ignore_case="y"
   sequence="110"
   expand_variables="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[

option_set_default('cmd', 'gw')
option_set_default('plugin_colour', 'steelblue')

window_set(questwin)

init_plugin_vars()
set_plugin_alias()

]]>
</script>

</muclient>
