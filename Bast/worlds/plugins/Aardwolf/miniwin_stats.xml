<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- $Id$ -->
<muclient>
<plugin
   name="miniwin_stats"
   author="Bast"
   id="eee90c778a44169e1e1d9585"
   language="Lua"
   purpose="display stats in a miniwindow"
   date_written="2008-07-18"
   requires="4.34"
   version="2.0"
   save_state="y"
   >
<description trim="y">
Redirects the map to a mini window.
</description>

</plugin>

<!--  Script  -->

<script>
<![CDATA[

require 'var'
require 'pluginhelper'
require "miniwin"
require "tprint"
require "commas"
require "serialize"
require "tablefuncs"
require "ldplugin"

statwin = Miniwin:new{name="Stats"}
statwin:set_default('width_padding', 5)
statwin:set_default('header_height', 0)

function build_stat_window()
  stats = GetPluginVariableList("8a710e0783b431c06d61a54c")

  styles = {}
  
  tstyle = format_stat('Strength', stats.str, stats.base_str, 13, 3)
  table.insert(tstyle, {text="   "})
  tableExtend(tstyle, format_stat('HP', stats.hp, stats.max_hp, 5, #tostring(stats.max_hp)))
  table.insert(styles, tstyle)
  
  tstyle = format_stat('Intelligence', stats.int, stats.base_int, 13, 3)
  table.insert(tstyle, {text="   "})
  tableExtend(tstyle, format_stat('Mana', stats.mana, stats.max_mana, 5, #tostring(stats.max_mana)))
  table.insert(styles, tstyle)


  tstyle = format_stat('Wisdom', stats.wis, stats.base_wis, 13, 3)
  table.insert(tstyle, {text="   "})
  tableExtend(tstyle, format_stat('Moves', stats.moves, stats.max_moves, 5, #tostring(stats.max_moves)))
  table.insert(styles, tstyle)

  table.insert(styles, format_stat('Dexterity', stats.dex, stats.base_dex, 13, 3))
  
  tstyle = format_stat('Constitution', stats.con, stats.base_con, 13, 3)
  table.insert(tstyle, {text="   "})
  tableExtend(tstyle, format_stat('HR', stats.hitroll, nil, 5, #tostring(stats.hitroll)))
  table.insert(styles, tstyle)

  tstyle = format_stat('Luck', stats.luck, stats.base_luck, 13, 3)
  table.insert(tstyle, {text="   "})
  tableExtend(tstyle, format_stat('DR', stats.damroll, nil, 5, #tostring(stats.damroll)))
  table.insert(styles, tstyle)
  
  table.insert(styles, {{text = ''}})
  
  tstyle = format_stat('XP to Level', stats.to_level, nil, 13, 7)
  table.insert(tstyle, {text="   "})
  tableExtend(tstyle, format_stat('Level', stats.level, nil, 5, #tostring(stats.level), "#00EE00"))
  table.insert(styles, tstyle)
  
  tstyle = format_stat('Alignment', stats.align, nil, 13, 7)
  table.insert(tstyle, {text="   "})
  tableExtend(tstyle, format_stat('Gold', stats.gold, nil, 5, #tostring(stats.gold), 'gold'))
  table.insert(styles, tstyle)

  table.insert(styles, {{text = ''}})
  
  tstyle = format_stat('QP', stats.qp, nil, 13, 7)
  table.insert(tstyle, {text="   "})
  tableExtend(tstyle, format_stat('TP', stats.tp, nil, 5, #tostring(stats.tp)))
  table.insert(styles, tstyle)  
  
  statwin:enable()
  statwin:createwin(styles)
end

function format_stat(statname, statcur, statother, colwidth, statlength, color)
    allstyle = {}
    
    style = {}    
    style.text = string.format( "%-" .. tostring(colwidth) .. "s", statname ) 
    style.textcolour = "lightseagreen"
    table.insert(allstyle, style)

    style = {}
    style.text = ' : '
    style.textcolour = "lightseagreen"
    --style.start = start
    table.insert(allstyle, style)

    style = {}
    style.text = string.format( "%" .. tostring(statlength) .. "s",  statcur)
    if color then
      style.textcolour = color
    else
      style.textcolour = 'white'
    end
    table.insert(allstyle, style)
    
    if statother then
      style = {}
      style.text = '/'
      style.textcolour = "lightseagreen"
      table.insert(allstyle, style)
      
      style = {}
      style.text = string.format( "%-" .. tostring(statlength) .. "s",  statother)
      style.textcolour = 'white'
      table.insert(allstyle, style)
    end

    return allstyle
end

]]>
</script>

<script>
<![CDATA[

function OnPluginBroadcast (msg, id, name, text)
  if msg == 1 and id == "8a710e0783b431c06d61a54c" then
    build_stat_window()
  end
  phelper:OnPluginBroadcast(msg, id, name, text)
end

function OnPluginInstall ()
  --OnPluginEnable is automatically called by pluginhelper

  phelper:OnPluginInstall()
end -- OnPluginInstall

function OnPluginClose ()
  --OnPluginDisable is automatically called by pluginhelper

  phelper:OnPluginClose()
end -- OnPluginClose

function OnPluginEnable ()
  ldplugin("Stats_Detector")
  
  phelper:OnPluginEnable()
end -- OnPluginEnable

function OnPluginDisable ()

  phelper:OnPluginDisable()
end -- OnPluginDisable

function OnPluginConnect ()

  phelper:OnPluginConnect()
end -- function OnPluginConnect

function OnPluginDisconnect ()

  phelper:OnPluginDisconnect()
end -- function OnPluginConnect

function OnPluginSaveState ()

  phelper:OnPluginSaveState()
end -- function OnPluginSaveState

]]>
</script>

<script>
<![CDATA[

phelper:set_default('cmd', 'mstat')
phelper:set_default('plugin_colour', 'steelblue')

phelper:add_pobject('win', statwin)

phelper:enable()

]]>
</script>
</muclient>
