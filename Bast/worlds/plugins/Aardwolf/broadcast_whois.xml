<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- $Id$ -->
<muclient>
<plugin
   name="xBroadcast_Whois"
   author="Bast"
   id="aaaf9a8dc92f8fc614663ac0"
   language="Lua"
   purpose="broadcast info from whois"
   save_state="y"
   date_written="2009-02-22 14:20:07"
   requires="4.38"
   version="1.0"
   >

<description trim="y">
<![CDATA[
[FOR PLUGIN AUTHORS ONLY]

Broadcasts stats when leveling
Broadcasts
   1 - whois info, get var.whoisinfo and loadstring it
    whoisinfo = {}
        whoisinfo.powerupsall = 0
        whoisinfo.birthdate = "15 Jul 2003"
        whoisinfo.questscomplete = "5689"
        whoisinfo.tiers = "0"
        whoisinfo.qpearned = "124541"
        whoisinfo.totaltrivia = 0
        whoisinfo.race = "shade"
        whoisinfo.combatmazekills = "0"
        whoisinfo.trainedstats = "416"
        whoisinfo.totallevels = 870
        whoisinfo.level = "66"
        whoisinfo.triviapoints = "21"
        whoisinfo.hoursonline = "4575"
        whoisinfo.questpoints = "18330"
        whoisinfo.powerupsmort = 0
        whoisinfo.combatmazedeaths = "0"
        whoisinfo.timeskilled = "165"
        whoisinfo.subclass = "ninja"
        whoisinfo.monsterskilled = "30816"
        whoisinfo.campaignsfld = "35"
        whoisinfo.duelswon = "0"
        whoisinfo.classes = {}
            whoisinfo.classes[1] = "thief"
            whoisinfo.classes[2] = "psionicist"
            whoisinfo.classes[3] = "cleric"
            whoisinfo.classes[4] = "paladin"
            whoisinfo.classes[5] = "mage"
        whoisinfo.campaignsdone = "777"
        whoisinfo.remorts = 5
        whoisinfo.sex = "male"
        whoisinfo.gquestswon = "26"
        whoisinfo.duelslost = "0"
        whoisinfo.questsfailed = "137"
        whoisinfo.name = "Bast"

Example
  function OnPluginBroadcast (msg, id, name, text)
    if id == "aaaf9a8dc92f8fc614663ac0" and msg == 1 then
      local pvar = GetPluginVariable(  "aaaf9a8dc92f8fc614663ac0", whoisinfo )

      -- get the info
      loadstring( pvar )()
      info = whoisinfo
    end
  end
]]>
</description>
</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<triggers>
  <trigger
   script="whois_line1"
   match="^\[\s*(\d+)\s+T(\d)\s+([-\w]+)\s+(\w+)\]\s+(\w+)\s+(.*)\s+\((\w+)\s+(\w+)\)$"
   enabled="n"
   regexp="y"
   ignore_case="y"
   sequence="100"
   group="whois"
  >
  </trigger>
  <trigger
   script="whois_line2"
   match="^\[Multiclass Player: (.*) \]$"
   enabled="n"
   regexp="y"
   ignore_case="y"
   sequence="100"
   group="whois"
  >
  </trigger>
  <trigger
   script="whois_stats"
   match="^(?&lt;name1&gt;[\w\s]*)\s*:\s*\[\s*(?&lt;val1&gt;[\w\d\s]*)\s*\]\s*(?&lt;name2&gt;[\w\s]*)\s*:\s*\[\s*(?&lt;val2&gt;[\w\d\s]*)\s*\]\s*$"
   enabled="n"
   regexp="y"
   ignore_case="y"
   sequence="101"
   group="whois"
  >
  </trigger>
  <trigger
   script="whois_stats"
   match="^(?&lt;name1&gt;[\w\s]*)\s*:\s*\[\s*(?&lt;val1&gt;[\w\d\s]*)\s*\]\s*(?&lt;name2&gt;[\w\s]*)\s*:\s*\[\s*(?&lt;val2&gt;[\w\d\s]*)\s*\]\s*(?&lt;name3&gt;[\w\s]*)\s*:\s*\[\s*(?&lt;val3&gt;[\w\d\s]*)\s*\]\s*$"
   enabled="n"
   regexp="y"
   ignore_case="y"
   sequence="101"
   group="whois"
  >
  </trigger>
  <trigger
   script="whois_stats"
   match="^(?&lt;name1&gt;[\w\s]*)\s*:\s*\[\s*(?&lt;val1&gt;[\w\d\s]*)\s*\]\s*$"
   enabled="n"
   regexp="y"
   ignore_case="y"
   sequence="101"
   group="whois"
  >
  </trigger>
  <trigger
   name="powerup"
   script="whois_stats"
   match="^(?&lt;name1&gt;[\w\s]*)\s*:\s*\[\s*(?&lt;val1&gt;[\w\d\s]*)\s*\]\s*([\w\s]*)\s*:\s*\[\s*(?&lt;pval1&gt;[\w\d\s]*)\s*\]\s*\[\s*(?&lt;pval2&gt;[\w\d\s]*)\s*\]\s*$"
   enabled="n"
   regexp="y"
   ignore_case="y"
   sequence="101"
   group="whois"
  >
  </trigger>
  <trigger
   name="whois_end"
   script="whois_end"
   match="^--------------------------------------------------------------------------$"
   enabled="n"
   regexp="y"
   ignore_case="y"
   sequence="101"
  >
  </trigger>
</triggers>

<aliases>
  <alias
   name="whois_start"
   script="whois_start"
   match="^(whoi|whois)$"
   enabled="y"
   regexp="y"
   ignore_case="y"
   sequence="110"
   expand_variables="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
require "var"
require "serialize"
require "commas"
require "pluginhelper"
require "verify"
require "aardutils"

-- keys - type, time, newlevel, hp, mana, mov, trains, pracs, bonustrains, bonusstats = {}
-- bonusstats subtable keys are the bonus stat names

currentlevel = ""
remorts = ""
level = ""
tier = ""
whoisinfo = {}

function whois_start(name, line, wildcards)
  whoisinfo = {}
  enabletriggroup("whois", true)
  --SendNoEcho('nopretitle')
  Send(line)
end

function whois_line1(name, line, wildcards)
  whoisinfo['level'] = wildcards[1]
  whoisinfo['tiers'] = wildcards[2]
  whoisinfo['race'] = string.lower(wildcards[3])
  whoisinfo['name'] = wildcards[5]
  whoisinfo['sex'] = string.lower(wildcards[7])
  whoisinfo['subclass'] = string.lower(wildcards[8])
  whoisinfo['powerupsall'] = 0
  whoisinfo['powerupsmort'] = 0
  if wildcards[4] ~= "MLT" then
    whoisinfo['remorts'] = 1
    whoisinfo['classes'] = {}
    table.insert(whoisinfo['classes'], classabb[string.lower(wildcards[4])])
  end
  check(EnableTrigger("whois_end", true))
end

function whois_line2(name, line, wildcards)
  tlist = utils.split(wildcards[1],"/")
  remorts = #tlist
  whoisinfo['remorts'] = remorts
  whoisinfo['classes'] = {}
  for _,tclass in ipairs(tlist) do
    tclass = string.gsub (tclass, " ", "")
    table.insert(whoisinfo['classes'], string.lower(trim(tclass)))
  end
end

function whois_stats(name, line, wildcards)
  for i = 1, 3 do
    local tname = 'name' .. i
    local tval = 'val' .. i
    if wildcards[tname] then
      tclass = string.gsub (wildcards[tname], " ", "")
      whoisinfo[string.lower(tclass)] = trim(wildcards[tval])
    end
  end
  if name == "powerup" then
    print("powerup")
    whoisinfo['powerupsall'] = trim(wildcards['pval1'])
    whoisinfo['powerupsmort'] = trim(wildcards['pval2'])
  end
end

function whois_end(name, line, wildcards)
  check(EnableTrigger("whois_end", false))
  enabletriggroup("whois", false)
  --SendNoEcho('nopretitle')
  whoisinfo['totallevels'] = (whoisinfo.remorts - 1) * 201 + whoisinfo.level
  whoisinfo['totaltrivia'] = 0
  var.whoisinfo = serialize.save( "whoisinfo", whoisinfo )
  broadcast(1, var.whoisinfo)
end

function OnPluginEnable ()

end

function OnPluginDisable ()
  BroadcastPlugin(-1)
end


function OnPluginSaveState ()
  SetVariable ("enabled", tostring (GetPluginInfo (GetPluginID (), 17)))
  plugin_save_vars(options_table)
end -- function OnPluginSaveState

function OnPluginInstall ()

 if GetVariable ("enabled") == "false" then
    ColourNote ("yellow", "", "Warning: Plugin " .. GetPluginName ().. " is currently disabled.")
    check (EnablePlugin(GetPluginID (), false))
    return
  end -- they didn't enable us last time

end -- OnPluginInstall
]]>
</script>

<aliases>
  <alias
   name="plugin_parse"
   script="plugin_parse_helper"
   match="nothing"
   enabled="y"
   regexp="y"
   ignore_case="y"
   sequence="110"
   expand_variables="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[

option_set_default('cmd', 'bwhois')
option_set_default('plugin_colour', 'orange')

init_plugin_vars()
set_plugin_alias()
]]>
</script>
</muclient>
