<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- $Id$ -->
<muclient>
<plugin
   name="xBroadcast_State"
   author="Bast"
   id="aaa79afcb20fa11787c5a327"
   language="Lua"
   purpose="Sends updates when the playing state changes"
   save_state="y"   
   date_written="2009-02-02"
   requires="4.28"
   version="1.0"
   >

<description trim="y">
<![CDATA[
[FOR PLUGIN AUTHORS ONLY]

Detects when there is a change in state

Example:

  function OnPluginBroadcast (msg, id, name, text)
    if id == "aaa79afcb20fa11787c5a327" then
      state = GetPluginVariable ("aaa79afcb20fa11787c5a327", "state")
      statestring = GetPluginVariable ("aaa79afcb20fa11787c5a327", "statestring")
    end -- playing status changed
  end

To test if you are currently playing (after a reinstall):

  state = GetPluginVariable ("aaa79afcb20fa11787c5a327", "state")
  
You can also just do:
  state = GetPluginVariable ("aaa79afcb20fa11787c5a327")
  
and then get the values by:
  state.state
  state.statestring
]]>
</description>

</plugin>

<!--  Script  -->

<script>
<![CDATA[

require "var"
require "pluginhelper"
require "verify"

statestrings = {
  [1] = 'login',
  [2] = 'motd',
  [3] = 'active',
  [4] = 'afk',
  [5] = 'note',
  [6] = 'edit',
  [7] = 'page',
  [8] = 'combat',
  [9] = 'sleeping',
  [11] = 'resting'
  }

var.statestring = statestrings[1]
var.state = 1

function OnPluginTelnetOption (option)
  --- ignore not type 100.
  
  if string.byte(option,1) ~= 100 then return end

  state = tonumber(string.byte(option,2))
  if state == var.state then return end

  var.state = state
  var.statestring = statestrings[state]

  broadcast(state)

end -- function

-- pull in telnet option handling
dofile (GetPluginInfo (GetPluginID (), 20) .. "telnet_options.lua")

function OnPluginInstall ()
  if GetVariable ("enabled") == "false" then
    ColourNote ("yellow", "", "Warning: Plugin " .. GetPluginName ().. " is currently disabled.")
    check (EnablePlugin(GetPluginID (), false))
    return
  end -- they didn't enable us last time
  
  -- if we are connected when the plugin loads, it must have been reloaded whilst playing
  if IsConnected () then
    TelnetOptionOn (TELOPT_REQUEST_STATUS)  -- get actual status (eg. afk, playing)
  end -- if already connected
 
end -- function OnPluginInstall

function OnPluginDisconnect ()
  return
end -- function OnPluginInstall

function OnPluginConnect ()
  return
end -- function OnPluginConnect

function OnPluginSaveState ()
  SetVariable ("enabled", tostring (GetPluginInfo (GetPluginID (), 17)))
  plugin_save_vars(options_table)    
end -- function OnPluginSaveState
]]>
</script>

<aliases>
  <alias
   name="plugin_parse"
   script="plugin_parse"
   match="nothing"
   enabled="y"
   regexp="y"
   ignore_case="y"
   sequence="110"
   expand_variables="y"
  >
  </alias>   
</aliases>

<script>
<![CDATA[

options_table  = {
  tdebug = {help="set this for debugging information", type="bool", default=verify_bool(false)},
  plugin_colour = {help="set the plugin colour", type="colour", default=verify_colour("orange")},
  cmd = {help="the command for this plugin", type="string", after=set_plugin_alias, default="bstate"},
}

cmds_table = {

}
  
function plugin_parse (name, line, wildcards)
  plugin_parse_helper(name, line, wildcards, cmds_table, options_table)
end -- plugin_parse

init_plugin_vars(options_table)
set_plugin_alias()
]]>
</script>
</muclient>
